library(devtools)
document('c:/users/ac/google drive/functions/fitpack/TEfits')
build_vignettes('c:/users/ac/google drive/functions/fitpack/TEfits')
install('c:/users/ac/google drive/functions/fitpack/TEfits')
library(TEfits)
?vignettes(TEfits)
vignettes(TEfits)
vignette(TEfits)
vignette('TEfits')
vignette(package=TEfits)
vignette(package='TEfits')
?devtools::install
install('c:/users/ac/google drive/functions/fitpack/TEfits',build_vignettes = T)
library(devtools)
install('c:/users/ac/google drive/functions/fitpack/TEfits',build_vignettes = T)
vignette(package='TEfits')
TEfits::TEfits_explained
setwd('..')
library(devtools)
use_vignette('TEfits_basics',title='TEfits basics')
rm(list=ls())
library(devtools)
document('c:/users/ac/google drive/functions/fitpack/TEfits')
build_vignettes('c:/users/ac/google drive/functions/fitpack/TEfits')
install('c:/users/ac/google drive/functions/fitpack/TEfits')
library(brms)
browseVignettes('TEfits')
install('c:/users/ac/google drive/functions/fitpack/TEfits',build_vignettes = T)
browseVignettes('TEfits')
browseVignettes('TEfits')
?install_github
library(TEfits)
dat <- data.frame(response=log(2:31),trial_number=1:30)
mod <- TEfit(dat[,c('response','trial_number')])
plot(mod,plot_title='Time-evolving fit of artificial data')
summary(mod)
dat <- data.frame(response=log(2:31)/log(32),trial_number=1:30)
mod <- TEfit(dat[,c('response','trial_number')],
errFun='bernoulli',
bootPars=list(nBoots=40))
plot(mod,plot_title='Time-evolving fit of artificial data with 95% CI from 40 bootstrapped fits')
summary(mod)
dat <- data.frame(response=rep(dat$response,4)*seq(0,.2,length=120),trial_number=rep(1:30,4),group=rep(letters[1:4],each=30))
mod <- TEfitAll(dat[,c('response','trial_number')],
groupingVar = dat$group)
mod <- TEfitAll(dat[,c('response','trial_number')],
groupingVar = dat$group,groupingVarName = 'which_group')
plot(dat)
library(devtools)
document('c:/users/ac/google drive/functions/fitpack/TEfits')
build_vignettes('c:/users/ac/google drive/functions/fitpack/TEfits')
install('c:/users/ac/google drive/functions/fitpack/TEfits',build_vignettes = T)
dat <- data.frame(response=log(2:31)/log(32),trial_number=1:30)
dat <- data.frame(response=rep(dat$response,4)*seq(0,.2,length=120),trial_number=rep(1:30,4),group=rep(letters[1:4],each=30))
mod <- TEfitAll(dat[,c('response','trial_number')],
groupingVar = dat$group,
groupingVarName = 'Participant')
library(TEfits)
mod <- TEfitAll(dat[,c('response','trial_number')],
groupingVar = dat$group,
groupingVarName = 'Participant')
plot(mod)
summary(mod)
## ## get to the folder:
# library(AaronFuns)
# setACwd('functions/fitpack')
# load in some AaronFuns data here, to use in tests?
# detach(package:AaronFuns)
# # want to break this up. have a different file for testing control pars,
# # for testing errfuns,
# # for testing linkfuns,
# # for testing bounds.
# # Have it write a result file. Then refer to a specific previously-existing
# # result file as "ground truth"
## also... read about testthat
library(devtools)
document('c:/users/ac/google drive/functions/fitpack/TEfits')
build_vignettes('c:/users/ac/google drive/functions/fitpack/TEfits')
install('c:/users/ac/google drive/functions/fitpack/TEfits',build_vignettes = T)
## ## create some d_01_monoa
d_01_mono <- data.frame(timeVar = 1:50, respVar = c(seq(.3,.9,length=25),seq(.9,.91,length=25))+rep(c(0,.01),25),covar1=rep(c(1,2),25),covar2 = rep(c(-3,-1,0,2,5),10))
d_01_mono_3 <- rbind(d_01_mono,d_01_mono,d_01_mono)
d_01_mono_3$group <- rep(c('a','b','c'),each=50)
d_01_mono_3$respVar <- d_01_mono_3$respVar + seq(-.2,.05,length=150)
# install.packages("TEfits_00.60.50.tar.gz",repos=NULL)
library(TEfits)
testDF <- data.frame()
## ## ## ##
## ## ## #### ## ## ##
## ## ## ##
testNum <- 1
## Default fitting of 'ols' error function and 3-parameter exponential change function:
{m <- TEfit(d_01_mono[,c('respVar','timeVar')])
# summary(m)
# view a plot of the model:
# plot(m)
testDF <- rbind(testDF,
data.frame(testNum=testNum,
testType='asymptote',
truth=0.9783, # empirically found 20200301
estimated=round(m$model$par['pAsym'],4),
notes='ols; expo3')
)
testDF <- rbind(testDF,
data.frame(testNum=testNum,
testType='err',
truth=0.0584, # empirically found 20200301
estimated=round(m$model$GoF$err,4),
notes='ols; expo3')
)
testDF <- rbind(testDF,
data.frame(testNum=testNum,
testType='start',
truth=.2405, # empirically found 20200301
estimated=round(m$model$par['pStart'],4),
notes='ols; expo3')
)
}
##
## ##
##
testNum <- testNum+1
## 'bernoulli' error function:
{m <- TEfit(d_01_mono[,c('respVar','timeVar')],errFun='bernoulli')
testDF <- rbind(testDF,
data.frame(testNum=testNum,
testType='asymptote',
truth=.91,
estimated=m$model$par['pAsym'],
notes='bernoulli; expo')
)
testDF <- rbind(testDF,
data.frame(testNum=testNum,
testType='start',
truth=.3,
estimated=m$model$par['pStart'],
notes='bernoulli; expo')
)
}
##
## ##
##
testNum <- testNum+1
## 3-parameter power change function:
{m <- TEfit(d_01_mono[,c('respVar','timeVar')],changeFun='power')
testDF <- rbind(testDF,
data.frame(testNum=testNum,
testType='asymptote',
truth=.91,
estimated=m$model$par['pAsym'],
notes='ols; power3')
)
testDF <- rbind(testDF,
data.frame(testNum=testNum,
testType='err',
truth=0.321,
estimated=m$model$GoF$err,
notes='ols; power3')
)
testDF <- rbind(testDF,
data.frame(testNum=testNum,
testType='start',
truth=.3,
estimated=m$model$par['pStart'],
notes='ols; power3')
)
}
##
## ##
##
testNum <- testNum+1
## 4-parameter power change function:
{m <- TEfit(d_01_mono[,c('respVar','timeVar')],changeFun='power4')
testDF <- rbind(testDF,
data.frame(testNum=testNum,
testType='asymptote',
truth=.91,
estimated=m$model$par['pAsym'],
notes='ols; power4')
)
testDF <- rbind(testDF,
data.frame(testNum=testNum,
testType='previous_time',
truth=Inf,
estimated=m$model$par['pPrevTime'],
notes='ols; power4')
)
testDF <- rbind(testDF,
data.frame(testNum=testNum,
testType='start',
truth=.3,
estimated=m$model$par['pStart'],
notes='ols; power4')
)
testDF <- rbind(testDF,
data.frame(testNum=testNum,
testType='err',
truth=0.0868,
estimated=m$model$GoF$err,
notes='ols; power4')
)
}
##
## ##
##
testNum <- testNum+1
## 4-parameter exponential change function:
{m <- TEfit(d_01_mono[,c('respVar','timeVar')],changeFun='expo_double')
testDF <- rbind(testDF,
data.frame(testNum=testNum,
testType='asymptote',
truth=.91,
estimated=m$model$par['pAsym'],
notes='ols; expo4')
)
testDF <- rbind(testDF,
data.frame(testNum=testNum,
testType='previous_time',
truth=Inf,
estimated=m$model$par['pRateA'],
notes='ols; expo4; over 1.5 & under 8')
)
testDF <- rbind(testDF,
data.frame(testNum=testNum,
testType='previous_time',
truth=Inf,
estimated=m$model$par['pRateB'],
notes='ols; expo4; over 1.5 & under 8')
)
testDF <- rbind(testDF,
data.frame(testNum=testNum,
testType='start',
truth=.3,
estimated=m$model$par['pStart'],
notes='ols; expo4')
)
testDF <- rbind(testDF,
data.frame(testNum=testNum,
testType='err',
truth=0.0584,
estimated=m$model$GoF$err,
notes='ols; expo4')
)
}
##
## ##
##
testNum <- testNum+1
## standard fit of 3 participants
{m <- TEfitAll(d_01_mono_3[,c('respVar','timeVar')],groupingVar=d_01_mono_3$group)
testDF <- rbind(testDF,
data.frame(testNum=testNum,
testType='asymptote',
truth=.886,
estimated=m$fitSummary['mean','pAsym'],
notes='mean of 3 participants; ols; expo')
)
testDF <- rbind(testDF,
data.frame(testNum=testNum,
testType='start',
truth=.184,
estimated=m$fitSummary['mean','pStart'],
notes='mean of 3 participants; ols; expo')
)
}
##
## ##
##
testNum <- testNum+1
## 50 bootstrapped fits:
{mB <- TEfit(d_01_mono[,c('respVar','timeVar')],bootPars=list(nBoots=50,nPerBoot=50))
mBs <- summary(mB,printOutput=F)
testDF <- rbind(testDF,
data.frame(testNum=testNum,
testType='asym_boot_se',
truth=.016,
estimated=mBs$param_vals['pAsym','pseudoSE'],
notes='comparison of 50 to 2000 resamples')
)
testDF <- rbind(testDF,
data.frame(testNum=testNum,
testType='rate_boot_se',
truth=.115,
estimated=mBs$param_vals['pRate','pseudoSE'],
notes='comparison of 50 to 2000 resamples')
)
testDF <- rbind(testDF,
data.frame(testNum=testNum,
testType='start_boot_se',
truth=.033,
estimated=mBs$param_vals['pStart','pseudoSE'],
notes='comparison of 50 to 2000 resamples')
)
testDF <- rbind(testDF,
data.frame(testNum=testNum,
testType='boot_time',
truth=.1,
estimated=mB$modList$times['mean_per_boot'],
notes='.1 would be a great time per boot to aim for.')
)
}
##
## ##
##
testNum <- testNum+1
## 50 cross-validated fits:
{mB <- TEfit(d_01_mono[,c('respVar','timeVar')],bootPars=list(nBoots=50,nPerBoot=50,bootPercent=.8))
mBs <- summary(mB,printOutput=F)
testDF <- rbind(testDF,
data.frame(testNum=testNum,
testType='oos_err',
truth=.069,
estimated=mBs$GoF$oosErr,
notes='comparison of 50 to 2000 resamples')
)
testDF <- rbind(testDF,
data.frame(testNum=testNum,
testType='oos_delta_err',
truth= -1.91,
estimated=mBs$GoF$oosDeltaErr,
notes='comparison of 50 to 2000 resamples')
)
testDF <- rbind(testDF,
data.frame(testNum=testNum,
testType='asym_boot_se',
truth=.007,
estimated=mBs$param_vals['pAsym','pseudoSE'],
notes='comparison of 50 to 2000 resamples')
)
testDF <- rbind(testDF,
data.frame(testNum=testNum,
testType='rate_boot_se',
truth=.058,
estimated=mBs$param_vals['pRate','pseudoSE'],
notes='comparison of 50 to 2000 resamples')
)
testDF <- rbind(testDF,
data.frame(testNum=testNum,
testType='start_boot_se',
truth=.014,
estimated=mBs$param_vals['pStart','pseudoSE'],
notes='comparison of 50 to 2000 resamples')
)
testDF <- rbind(testDF,
data.frame(testNum=testNum,
testType='boot_time',
truth=.1,
estimated=mB$modList$times['mean_per_boot'],
notes='.1 would be a great time per boot to aim for.')
)
}
testDF
