m <- TEfit(datA[,c('rtC','trialNum')],
errFun = 'wiener_dr',
control=list(nTries = 50) #,ylim=c(.1,2))
)
summary(m)
library(devtools)
document('c:/users/ac/google drive/functions/fitpack/TEfits')
install('c:/users/ac/google drive/functions/fitpack/TEfits')
## TRY TEfits wiener_dr
datA <- data.frame(rt  = exp(rnorm(100,seq(-.9,-1.1,length=100),.2)+.2),
acc=rep(c(0,1),50),
trialNum = 1:100)
cor(datA)
aggregate(rt~acc,datA,mean)
datA$rtC <- datA$rt*(datA$acc*2 - 1)
plot(datA$rtC)
m <- TEfit(datA[,c('rtC','trialNum')],
errFun = 'wiener_dr',
control=list(nTries = 50) #,ylim=c(.1,2))
)
summary(m)
plot(m)
library(devtools)
document('c:/users/ac/google drive/functions/fitpack/TEfits')
install('c:/users/ac/google drive/functions/fitpack/TEfits')
## TRY TEfits wiener_dr
datA <- data.frame(rt  = exp(rnorm(100,seq(-.9,-1.1,length=100),.2)+.2),
acc=rep(c(0,1),50),
trialNum = 1:100)
cor(datA)
aggregate(rt~acc,datA,mean)
datA$rtC <- datA$rt*(datA$acc*2 - 1)
plot(datA$rtC)
m <- TEfit(datA[,c('rtC','trialNum')],
errFun = 'wiener_dr',
control=list(nTries = 50) #,ylim=c(.1,2))
)
summary(m)
library(devtools)
document('c:/users/ac/google drive/functions/fitpack/TEfits')
install('c:/users/ac/google drive/functions/fitpack/TEfits')
## TRY TEfits wiener_dr
datA <- data.frame(rt  = exp(rnorm(100,seq(-.9,-1.1,length=100),.2)+.2),
acc=rep(c(0,1),50),
trialNum = 1:100)
cor(datA)
aggregate(rt~acc,datA,mean)
datA$rtC <- datA$rt*(datA$acc*2 - 1)
plot(datA$rtC)
m <- TEfit(datA[,c('rtC','trialNum')],
errFun = 'wiener_dr',
control=list(nTries = 50) #,ylim=c(.1,2))
)
summary(m)
?dwiener
wdModel <- wdm(dat)
wdModel <- wdm(datA$rtC)
wdModel$coefficients['alpha']
wdModel$coefficients
library(devtools)
document('c:/users/ac/google drive/functions/fitpack/TEfits')
install('c:/users/ac/google drive/functions/fitpack/TEfits')
## TRY TEfits wiener_dr
datA <- data.frame(rt  = exp(rnorm(100,seq(-.9,-1.1,length=100),.2)+.2),
acc=rep(c(0,1),50),
trialNum = 1:100)
cor(datA)
aggregate(rt~acc,datA,mean)
datA$rtC <- datA$rt*(datA$acc*2 - 1)
plot(datA$rtC)
m <- TEfit(datA[,c('rtC','trialNum')],
errFun = 'wiener_dr',
control=list(nTries = 50) #,ylim=c(.1,2))
)
summary(m)
wdModel$coefficients
m$modList$parLims
library(devtools)
document('c:/users/ac/google drive/functions/fitpack/TEfits')
install('c:/users/ac/google drive/functions/fitpack/TEfits')
## TRY TEfits wiener_dr
datA <- data.frame(rt  = exp(rnorm(100,seq(-.9,-1.1,length=100),.2)+.2),
acc=rep(c(0,1),50),
trialNum = 1:100)
cor(datA)
aggregate(rt~acc,datA,mean)
datA$rtC <- datA$rt*(datA$acc*2 - 1)
plot(datA$rtC)
m <- TEfit(datA[,c('rtC','trialNum')],
errFun = 'wiener_dr',
control=list(nTries = 50) #,ylim=c(.1,2))
)
summary(m)
m$modList$parGuessBounds
m$modList$parLims
library(devtools)
document('c:/users/ac/google drive/functions/fitpack/TEfits')
install('c:/users/ac/google drive/functions/fitpack/TEfits')
## TRY TEfits wiener_dr
datA <- data.frame(rt  = exp(rnorm(100,seq(-.9,-1.1,length=100),.2)+.2),
acc=rep(c(0,1),50),
trialNum = 1:100)
cor(datA)
aggregate(rt~acc,datA,mean)
datA$rtC <- datA$rt*(datA$acc*2 - 1)
plot(datA$rtC)
m <- TEfit(datA[,c('rtC','trialNum')],
errFun = 'wiener_dr',
control=list(nTries = 50) #,ylim=c(.1,2))
)
summary(m)
library(devtools)
document('c:/users/ac/google drive/functions/fitpack/TEfits')
install('c:/users/ac/google drive/functions/fitpack/TEfits')
## TRY TEfits wiener_dr
datA <- data.frame(rt  = exp(rnorm(100,seq(-.9,-1.1,length=100),.2)+.2),
acc=rep(c(0,1),50),
trialNum = 1:100)
cor(datA)
aggregate(rt~acc,datA,mean)
datA$rtC <- datA$rt*(datA$acc*2 - 1)
plot(datA$rtC)
m <- TEfit(datA[,c('rtC','trialNum')],
errFun = 'wiener_dr',
control=list(nTries = 50) #,ylim=c(.1,2))
)
summary(m)
library(devtools)
document('c:/users/ac/google drive/functions/fitpack/TEfits')
install('c:/users/ac/google drive/functions/fitpack/TEfits')
## TRY TEfits wiener_dr
datA <- data.frame(rt  = exp(rnorm(100,seq(-.9,-1.1,length=100),.2)+.2),
acc=rep(c(0,1),50),
trialNum = 1:100)
cor(datA)
aggregate(rt~acc,datA,mean)
datA$rtC <- datA$rt*(datA$acc*2 - 1)
plot(datA$rtC)
m <- TEfit(datA[,c('rtC','trialNum')],
errFun = 'wiener_dr',
control=list(nTries = 50) #,ylim=c(.1,2))
)
summary(m)
library(devtools)
document('c:/users/ac/google drive/functions/fitpack/TEfits')
install('c:/users/ac/google drive/functions/fitpack/TEfits')
## TRY TEfits wiener_dr
datA <- data.frame(rt  = exp(rnorm(100,seq(-.9,-1.1,length=100),.2)+.2),
acc=rep(c(0,1),50),
trialNum = 1:100)
cor(datA)
aggregate(rt~acc,datA,mean)
datA$rtC <- datA$rt*(datA$acc*2 - 1)
plot(datA$rtC)
m <- TEfit(datA[,c('rtC','trialNum')],
errFun = 'wiener_dr',
control=list(nTries = 50) #,ylim=c(.1,2))
)
summary(m)
library(devtools)
document('c:/users/ac/google drive/functions/fitpack/TEfits')
install('c:/users/ac/google drive/functions/fitpack/TEfits')
## TRY TEfits wiener_dr
datA <- data.frame(rt  = exp(rnorm(100,seq(-.9,-1.1,length=100),.2)+.2),
acc=rep(c(0,1),50),
trialNum = 1:100)
cor(datA)
aggregate(rt~acc,datA,mean)
datA$rtC <- datA$rt*(datA$acc*2 - 1)
plot(datA$rtC)
m <- TEfit(datA[,c('rtC','trialNum')],
errFun = 'wiener_dr',
control=list(nTries = 50) #,ylim=c(.1,2))
)
summary(m)
library(devtools)
document('c:/users/ac/google drive/functions/fitpack/TEfits')
install('c:/users/ac/google drive/functions/fitpack/TEfits')
## TRY TEfits wiener_dr
datA <- data.frame(rt  = exp(rnorm(100,seq(-.9,-1.1,length=100),.2)+.2),
acc=rep(c(0,1),50),
trialNum = 1:100)
cor(datA)
aggregate(rt~acc,datA,mean)
datA$rtC <- datA$rt*(datA$acc*2 - 1)
plot(datA$rtC)
m <- TEfit(datA[,c('rtC','trialNum')],
errFun = 'wiener_dr',
control=list(nTries = 50) #,ylim=c(.1,2))
)
summary(m)
library(devtools)
document('c:/users/ac/google drive/functions/fitpack/TEfits')
install('c:/users/ac/google drive/functions/fitpack/TEfits')
## TRY TEfits wiener_dr
datA <- data.frame(rt  = exp(rnorm(100,seq(-.9,-1.1,length=100),.2)+.2),
acc=rep(c(0,1),50),
trialNum = 1:100)
cor(datA)
aggregate(rt~acc,datA,mean)
datA$rtC <- datA$rt*(datA$acc*2 - 1)
plot(datA$rtC)
m <- TEfit(datA[,c('rtC','trialNum')],
errFun = 'wiener_dr',
control=list(nTries = 50) #,ylim=c(.1,2))
)
summary(m)
m$modList$parLims
m$modList$parLims$parMax
m$modList$guessNames
library(devtools)
document('c:/users/ac/google drive/functions/fitpack/TEfits')
install('c:/users/ac/google drive/functions/fitpack/TEfits')
## TRY TEfits wiener_dr
datA <- data.frame(rt  = exp(rnorm(100,seq(-.9,-1.1,length=100),.2)+.2),
acc=rep(c(0,1),50),
trialNum = 1:100)
cor(datA)
aggregate(rt~acc,datA,mean)
datA$rtC <- datA$rt*(datA$acc*2 - 1)
plot(datA$rtC)
m <- TEfit(datA[,c('rtC','trialNum')],
errFun = 'wiener_dr',
control=list(nTries = 50) #,ylim=c(.1,2))
)
summary(m)
library(devtools)
document('c:/users/ac/google drive/functions/fitpack/TEfits')
install('c:/users/ac/google drive/functions/fitpack/TEfits')
## TRY TEfits wiener_dr
datA <- data.frame(rt  = exp(rnorm(100,seq(-.9,-1.1,length=100),.2)+.2),
acc=rep(c(0,1),50),
trialNum = 1:100)
cor(datA)
aggregate(rt~acc,datA,mean)
datA$rtC <- datA$rt*(datA$acc*2 - 1)
plot(datA$rtC)
m <- TEfit(datA[,c('rtC','trialNum')],
errFun = 'wiener_dr',
control=list(nTries = 50) #,ylim=c(.1,2))
)
summary(m)
library(devtools)
document('c:/users/ac/google drive/functions/fitpack/TEfits')
install('c:/users/ac/google drive/functions/fitpack/TEfits')
## TRY TEfits wiener_dr
datA <- data.frame(rt  = exp(rnorm(100,seq(-.9,-1.1,length=100),.2)+.2),
acc=rep(c(0,1),50),
trialNum = 1:100)
cor(datA)
aggregate(rt~acc,datA,mean)
datA$rtC <- datA$rt*(datA$acc*2 - 1)
plot(datA$rtC)
m <- TEfit(datA[,c('rtC','trialNum')],
errFun = 'wiener_dr',
control=list(nTries = 50) #,ylim=c(.1,2))
)
summary(m)
library(devtools)
document('c:/users/ac/google drive/functions/fitpack/TEfits')
install('c:/users/ac/google drive/functions/fitpack/TEfits')
## TRY TEfits wiener_dr
datA <- data.frame(rt  = exp(rnorm(100,seq(-.9,-1.1,length=100),.2)+.2),
acc=rep(c(0,1),50),
trialNum = 1:100)
cor(datA)
aggregate(rt~acc,datA,mean)
datA$rtC <- datA$rt*(datA$acc*2 - 1)
plot(datA$rtC)
m <- TEfit(datA[,c('rtC','trialNum')],
errFun = 'wiener_dr',
control=list(nTries = 50) #,ylim=c(.1,2))
)
summary(m)
m$modList$null_pNames
library(devtools)
document('c:/users/ac/google drive/functions/fitpack/TEfits')
install('c:/users/ac/google drive/functions/fitpack/TEfits')
## TRY TEfits wiener_dr
datA <- data.frame(rt  = exp(rnorm(100,seq(-.9,-1.1,length=100),.2)+.2),
acc=rep(c(0,1),50),
trialNum = 1:100)
cor(datA)
aggregate(rt~acc,datA,mean)
datA$rtC <- datA$rt*(datA$acc*2 - 1)
plot(datA$rtC)
m <- TEfit(datA[,c('rtC','trialNum')],
errFun = 'wiener_dr',
control=list(nTries = 50) #,ylim=c(.1,2))
)
summary(m)
library(devtools)
document('c:/users/ac/google drive/functions/fitpack/TEfits')
install('c:/users/ac/google drive/functions/fitpack/TEfits')
## TRY TEfits wiener_dr
datA <- data.frame(rt  = exp(rnorm(100,seq(-.9,-1.1,length=100),.2)+.2),
acc=rep(c(0,1),50),
trialNum = 1:100)
cor(datA)
aggregate(rt~acc,datA,mean)
datA$rtC <- datA$rt*(datA$acc*2 - 1)
plot(datA$rtC)
m <- TEfit(datA[,c('rtC','trialNum')],
errFun = 'wiener_dr',
control=list(nTries = 50) #,ylim=c(.1,2))
)
summary(m)
library(devtools)
document('c:/users/ac/google drive/functions/fitpack/TEfits')
install('c:/users/ac/google drive/functions/fitpack/TEfits')
## TRY TEfits wiener_dr
datA <- data.frame(rt  = exp(rnorm(100,seq(-.9,-1.1,length=100),.2)+.2),
acc=rep(c(0,1),50),
trialNum = 1:100)
cor(datA)
aggregate(rt~acc,datA,mean)
datA$rtC <- datA$rt*(datA$acc*2 - 1)
plot(datA$rtC)
m <- TEfit(datA[,c('rtC','trialNum')],
errFun = 'wiener_dr',
control=list(nTries = 50) #,ylim=c(.1,2))
)
summary(m)
library(devtools)
document('c:/users/ac/google drive/functions/fitpack/TEfits')
install('c:/users/ac/google drive/functions/fitpack/TEfits')
## TRY TEfits wiener_dr
datA <- data.frame(rt  = exp(rnorm(100,seq(-.9,-1.1,length=100),.2)+.2),
acc=rep(c(0,1),50),
trialNum = 1:100)
cor(datA)
aggregate(rt~acc,datA,mean)
datA$rtC <- datA$rt*(datA$acc*2 - 1)
plot(datA$rtC)
m <- TEfit(datA[,c('rtC','trialNum')],
errFun = 'wiener_dr',
control=list(nTries = 50) #,ylim=c(.1,2))
)
is.infinite(8)
is.infinite(Inf)
is.infinite(-Inf)
library(devtools)
document('c:/users/ac/google drive/functions/fitpack/TEfits')
install('c:/users/ac/google drive/functions/fitpack/TEfits')
## TRY TEfits wiener_dr
datA <- data.frame(rt  = exp(rnorm(100,seq(-.9,-1.1,length=100),.2)+.2),
acc=rep(c(0,1),50),
trialNum = 1:100)
cor(datA)
aggregate(rt~acc,datA,mean)
datA$rtC <- datA$rt*(datA$acc*2 - 1)
plot(datA$rtC)
m <- TEfit(datA[,c('rtC','trialNum')],
errFun = 'wiener_dr',
control=list(nTries = 50) #,ylim=c(.1,2))
)
library(devtools)
document('c:/users/ac/google drive/functions/fitpack/TEfits')
install('c:/users/ac/google drive/functions/fitpack/TEfits')
## TRY TEfits wiener_dr
datA <- data.frame(rt  = exp(rnorm(100,seq(-.9,-1.1,length=100),.2)+.2),
acc=rep(c(0,1),50),
trialNum = 1:100)
cor(datA)
aggregate(rt~acc,datA,mean)
datA$rtC <- datA$rt*(datA$acc*2 - 1)
plot(datA$rtC)
m <- TEfit(datA[,c('rtC','trialNum')],
errFun = 'wiener_dr',
control=list(nTries = 50) #,ylim=c(.1,2))
)
summary(m)
library(devtools)
document('c:/users/ac/google drive/functions/fitpack/TEfits')
install('c:/users/ac/google drive/functions/fitpack/TEfits')
## TRY TEfits wiener_dr
datA <- data.frame(rt  = exp(rnorm(100,seq(-.9,-1.2,length=100),.25)+.2),
acc=rep(c(0,1),50),
trialNum = 1:100)
cor(datA)
aggregate(rt~acc,datA,mean)
datA$rtC <- datA$rt*(datA$acc*2 - 1)
plot(datA$rtC)
m <- TEfit(datA[,c('rtC','trialNum')],
errFun = 'wiener_dr',
control=list(nTries = 20)
)
summary(m)
?TEfit
?TEfit
rm(list=ls())
library(TEfits)
?TEfit
datA <- data.frame(rt  = exp(rnorm(100,seq(-.9,-1.2,length=100),.25)+.2),
acc=rep(c(0,1),50),
trialNum = 1:100)
cor(datA)
datA$rtC <- datA$rt*(datA$acc*2 - 1)
aggregate(rt~acc,datA,mean)
plot(datA$rtC)
m <- TEfit(datA[,c('rtC','trialNum')],
errFun = 'wiener_dr',
control=list(nTries = 20,
pFix=list(bs_param=1,
bias_param=.5))
)
m <- TEfit(datA[,c('rtC','trialNum')],
errFun = 'wiener_dr',
control=list(nTries = 200
# , pFix=list(bs_param=1, bias_param=.5) # doesn't work.
)
)
summary(m)
m$nullFit
m$modList$times
(1400/200)/60
(1400/200)
(14087/200)
m$model
(14087/200)
d <- data.frame(y = c(0,0,0:3,0:4,0:10))
library(brms)
m <- brm(y~1,d,family=negbinomial())
summary(m)
?posterior_predict
load("C:/Users/AC/Google Drive/DDMS/archive/AC/8020/8020LTL_betaChange_onlyAcc_D_8000_its_975_delta_2020Feb26_1446.RData")
library(brms)
load("C:/Users/AC/Google Drive/DDMS/archive/AC/8020/8020LTL_betaChange_onlyAcc_D_8000_its_975_delta_2020Feb25_1734.RData")
load("C:/Users/AC/Google Drive/DDMS/archive/AC/8020/8020LTL_betaChange_onlyAcc_D_8000_its_975_delta_2020Feb26_1446.RData")
m1 <- propFlankMod ; rm(propFlankMod)
load("C:/Users/AC/Google Drive/DDMS/archive/AC/8020/8020LTL_betaChange_onlyAcc_D_8000_its_975_delta_2020Feb25_1734.RData")
m2 <- propFlankMod ; rm(propFlankMod)
m <- combine_models(m1,m2)
summary(m)
plot(m)
library(AaronFuns)
d_pss_early <- dat_pss
d_pss_late <- dat_postSurvey
d_dem_early <- dat_demogs_may2019
d_dem_late <- dat_demogs_dec2019
library(readxl)
d_massAll_f19 <- read_excel('c:users/ac/google drive/general lab things/demogs_and_postsurvey_pre20190905.xlsx')
d_massAll_f19 <- read_excel('c:users/ac/google drive/general lab things/demogs_and_postsurvey_pre20190905/Sona Green.xlsx')
d_massAll_f19 <- read_excel('c:users/ac/google drive/general lab things/demogs_and_postsurvey_pre20190905/Sona_Green.xlsx')
d_massAll_f19 <- read_excel('c:/users/ac/google drive/general lab things/demogs_and_postsurvey_pre20190905/Sona_Green.xlsx')
?read_excel
d_massAll_f19 <- read_excel('c:/users/ac/google drive/general lab things/demogs_and_postsurvey_pre20190905/Sona_Green.xlsx',sheet=1)
d_massAll_f19 <- read_excel('c:/users/ac/google drive/general lab things/Fall 2019 Mass Survey_September 30, 2019_Deidentified_Green.xlsx',sheet=1)
d_massAll_f19 <- read_excel('c:/users/ac/google drive/general lab things/demogs_and_postsurvey_pre20190905/Fall 2019 Mass Survey_September 30, 2019_Deidentified_Green.xlsx',sheet=1)
d_massDem_f19 <- read_excel('c:/users/ac/google drive/general lab things/demogs_and_postsurvey_pre20190905/Sona_Green.xlsx',sheet=1)
d_massAll_f19 <- read_excel('c:/users/ac/google drive/general lab things/demogs_and_postsurvey_pre20190905/Fall 2019 Mass Survey_September 30, 2019_Deidentified_Green.xlsx',sheet=1)
psych::pairs.panels(d_pss_early[,2:15])
xtabs(~StudyName,d_pss_early)
xtabs(~StudyName,d_pss_late)
psych::pairs.panels(d_dem_late[,11:25])
psych::pairs.panels(d_dem_late[,11:25],method = 'spearman',stars=T)
sum(!is.na(d_dem_late$Extraversion))
lm
?match
library(AaronFuns)
?rlm_boot
devtools::check('c:/users/ac/google drive/functions/fitpack/TEfits')
devtools::uses_testthat('c:/users/ac/google drive/functions/fitpack/TEfits')
setwd(('c:/users/ac/google drive/functions/fitpack/TEfits')
)
devtools::use_testthat('c:/users/ac/google drive/functions/fitpack/TEfits')
devtools::use_testthat()
devtools::use_testthat()
d_01_mono <- data.frame(timeVar = 1:50, respVar = c(seq(.3,.9,length=25),seq(.9,.91,length=25))+rep(c(0,.01),25),covar1=rep(c(1,2),25),covar2 = rep(c(-3,-1,0,2,5),10))
m <- TEfit(d_01_mono[,c('respVar','timeVar')])
m$model$par['pAsym']
round(m$model$par['pAsym'],3)
round(m$model$par['pRate'],3)
round(m$model$par['pStart'],3)
test_that("Simple 3-parameter exponential model parameters are correct", {
expect_equal(round(m$model$par['pAsym'],3), 0.978)
expect_equal(round(m$model$par['pRate'],3), 3.379)
expect_equal(round(m$model$par['pStart'],3), 0.240)
})
library(testthat)
test_that("Simple 3-parameter exponential model parameters are correct", {
expect_equal(round(m$model$par['pAsym'],3), 0.978)
expect_equal(round(m$model$par['pRate'],3), 3.379)
expect_equal(round(m$model$par['pStart'],3), 0.240)
})
m <- TEfit(d_01_mono[,c('respVar','timeVar')])
test_that("Simple 3-parameter exponential model parameters are correct", {
expect_equal(round(m$model$par['pAsym'],3), 0.978)
expect_equal(round(m$model$par['pRate'],3), 3.379)
expect_equal(round(m$model$par['pStart'],3), 0.240)
})
?test_that
round(m$model$par['pAsym'],3)
as.numeric(round(m$model$par['pAsym'],3))
test_that("3-parameter expo model params", {
expect_equal(as.numeric(round(m$model$par['pAsym'],3)), 0.978)
expect_equal(as.numeric(round(m$model$par['pRate'],3)), 3.379)
expect_equal(as.numeric(round(m$model$par['pStart'],3)), 0.240)
})
expect_equal(as.numeric(round(m$model$par['pAsym'],3)), 0.978)
expect_equal(as.numeric(round(m$model$par['pAsym'],3)), 0.978)
expect_equal(as.numeric(round(m$model$par['pAsym'],3)), 0.971)
test_that("3-parameter expo model params", {
expect_equal(as.numeric(round(m$model$par['pAsym'],3)), 0.971)
expect_equal(as.numeric(round(m$model$par['pRate'],3)), 3.379)
expect_equal(as.numeric(round(m$model$par['pStart'],3)), 0.240)
})
test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
