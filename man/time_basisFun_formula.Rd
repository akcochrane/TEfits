% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/time_basisFun_formula.R
\name{time_basisFun_formula}
\alias{time_basisFun_formula}
\title{Construct a formula with basis functions over time}
\usage{
time_basisFun_formula(
  formula_mem,
  ...,
  groupingVar,
  timeVar,
  basisDens,
  basis_calc_fun = "gaussian"
)
}
\arguments{
\item{formula_mem}{Formula, specified as in \code{brm} or \code{glmer}}

\item{...}{}

\item{groupingVar}{Character. Grouping variable for each timecourse (e.g., participant ID, or combination of participant and session)}

\item{timeVar}{Numeric vector. Variable over which basis functions are to be constructed.}

\item{basisDens}{Numeric scalar. Width between basis functions peaks (e.g., distance between first and second basis function highest-density points)}

\item{basis_calc_fun}{Character. Function by which the basis functions are constructed. Currently only "gaussian" is implemented.}
}
\description{
Adds basis functions, over the dimension of time, to a 
conventional [generalized] linear mixed-effects model formula.
}
\details{
Within a typical [G]LMEM, adding basis functions over the dimension
of time can control for time-related variations, while also allowing 
for the recovery of those variations. This function takes in the
formula of interest (e.g., \code{y ~ x + (x|ID)}) and its associated
 time data, and it returns an augmented formula 
 (e.g., \code{y ~ x + (x|ID) + (0 + basis_0 + basis_1 + basis_2 + basis_3 || ID)}).
 The corresponding data (i.e., constructed bases) are included as an attribute of the 
 returned formula (i.e., \code{returnedFormula,'dfOut'}).
 
 This function is designed to be compatible with \code{lme4} and 
 \code{brms} models.
}
